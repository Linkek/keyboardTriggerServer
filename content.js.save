// Function to attach focus listeners to inputs
function attachFocusListeners() {
    const inputElements = document.querySelectorAll(`
        input[type="text"],
        input[type="number"],
        input[type="search"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="password"],
        input[type="date"],
        input[type="time"],
        textarea,
        [contenteditable="true"]
    `);

    inputElements.forEach(input => {
        input.addEventListener('focus', function() {
            chrome.runtime.sendMessage({ action: "openKeyboard" });
        });
    });
}

// Function to attach click listeners to specific elements
function attachClickListeners() {
    const clickElements = document.querySelectorAll('a[href="/onscreen-keyboard"]');

    clickElements.forEach(input => {
        input.addEventListener('click', function(e) {
            e.preventDefault();
            chrome.runtime.sendMessage({ action: "openKeyboard" });
        });
    });
}

// Set up the MutationObserver to monitor changes to the DOM and attach listeners as needed
const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
        if (mutation.addedNodes && mutation.addedNodes.length > 0) {
            attachFocusListeners();
            attachClickListeners();
        }
    });
});

observer.observe(document.body, {
    childList: true,
    subtree: true
});

// Event listener to detect clicks outside of input elements and close the keyboard
document.addEventListener('click', function(event) {
    let target = event.target;
    while (target !== document) {
        if (target.matches('input, textarea, [contenteditable="true"]')) {
            return; // Clicked inside an input, do nothing
        }
        target = target.parentNode;
    }
    // Clicked outside of any input
    chrome.runtime.sendMessage({ action: "closeKeyboard" });
});
